## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Patient Handling'
description: |-

  APIs for Patient data.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/patient/register
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'POST - create/register a new patient user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'First name of the system user. Must not be greater than 60 characters.'
        required: true
        example: Jakab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Last name of the system user. Must not be greater than 60 characters.'
        required: true
        example: Gipsz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Email address of the system user. Must be a valid email address.'
        required: true
        example: jakab.gipsz@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Password of the system user. Must not be greater than 150 characters.'
        required: true
        example: jakabgipspasswd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: 'Role of the current user.'
        required: true
        example: patient
        type: string
        enumValues:
          - patient
          - doctor
          - admin
        exampleWasSpecified: false
        custom: []
      birthday:
        name: birthday
        description: 'Birthday of the patient. Must be a valid date in the format <code>Y-m-d</code>.'
        required: true
        example: '1985-09-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birthplace:
        name: birthplace
        description: 'Birthplace of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: true
        example: Budapest
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Current living city of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: true
        example: Eger
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zip:
        name: zip
        description: 'Zip of the patient current living place. Must not be greater than 10 characters.'
        required: true
        example: '3600'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      street:
        name: street
        description: 'Street of the living place of the patient. Must not be greater than 50 characters.'
        required: true
        example: 'Leányka utca'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house_number:
        name: house_number
        description: 'Current house number of the patient. Must not be greater than 10 characters.'
        required: true
        example: '6.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      insurance_number:
        name: insurance_number
        description: 'Insurance (TAJ) number of the patient. Must not be greater than 15 characters.'
        required: true
        example: '123 123 123'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Phone number of the patient. Must not be greater than 30 characters.'
        required: true
        example: '+36 36 460 1231'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: Jakab
      last_name: Gipsz
      email: jakab.gipsz@gmail.com
      password: jakabgipspasswd
      role: patient
      birthday: '1985-09-15'
      birthplace: Budapest
      city: Eger
      zip: '3600'
      street: 'Leányka utca'
      house_number: '6.'
      insurance_number: '123 123 123'
      phone: '+36 36 460 1231'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"first_name":null,"last_name":null,"email":"karelle45@example.org","patient_detail":null,"role":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/patient/login
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Login process of patients.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "User's e-mail address. Must be a valid email address."
        required: true
        example: xy.yahoo.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "User's password. Must not be greater than 150 characters."
        required: true
        example: my$ecretpassword
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      token_type:
        name: token_type
        description: ''
        required: true
        example: Doctor-Token
        type: string
        enumValues:
          - Patient-Token
          - Doctor-Token
          - Admin-Token
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: xy.yahoo.com
      password: my$ecretpassword
      token_type: Doctor-Token
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                 "id": 4,
                 "token": Bearer 4|qe$a21dadasd1313$qas
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/super/patients
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'GET - get every patient users of the system.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"first_name":null,"last_name":null,"email":"hgreenholt@example.net","patient_detail":null,"role":[]},{"id":null,"first_name":null,"last_name":null,"email":"ogerhold@example.org","patient_detail":null,"role":[]}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Da4bdf86V6cgak153eEvhPZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/super/patients/{id}'
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'UPDATE - modify patient users data.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the patient.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'First name of the system user. Must not be greater than 60 characters.'
        required: false
        example: Jakab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Last name of the system user. Must not be greater than 60 characters.'
        required: false
        example: Gipsz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Email address of the system user. Must be a valid email address.'
        required: false
        example: jakab.gipsz@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Password of the system user. Must not be greater than 150 characters.'
        required: false
        example: jakabgipspasswd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: 'Role of the current user.'
        required: false
        example: patient
        type: string
        enumValues:
          - patient
          - doctor
          - admin
        exampleWasSpecified: false
        custom: []
      birthday:
        name: birthday
        description: 'Birthday of the patient. Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '1985-09-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birthplace:
        name: birthplace
        description: 'Birthplace of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: false
        example: Budapest
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Current living city of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: false
        example: Eger
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zip:
        name: zip
        description: 'Zip of the patient current living place. Must not be greater than 10 characters.'
        required: false
        example: '3600'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      street:
        name: street
        description: 'Street of the living place of the patient. Must not be greater than 50 characters.'
        required: false
        example: 'Leányka utca'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house_number:
        name: house_number
        description: 'Current house number of the patient. Must not be greater than 10 characters.'
        required: false
        example: '6.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      insurance_number:
        name: insurance_number
        description: 'Insurance (TAJ) number of the patient. Must not be greater than 15 characters.'
        required: false
        example: '123 123 123'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Phone number of the patient. Must not be greater than 30 characters.'
        required: false
        example: '+36 36 460 1231'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: Jakab
      last_name: Gipsz
      email: jakab.gipsz@gmail.com
      password: jakabgipspasswd
      role: patient
      birthday: '1985-09-15'
      birthplace: Budapest
      city: Eger
      zip: '3600'
      street: 'Leányka utca'
      house_number: '6.'
      insurance_number: '123 123 123'
      phone: '+36 36 460 1231'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"first_name":null,"last_name":null,"email":"mary59@example.net","patient_detail":null,"role":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E3k146VdvbaeDacPh5g6f8Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/super/patients/{id}'
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE - delete a specific patient user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the patient.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              ['message': User deleted successfully.]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              ['message': 'Delete was not successful!']
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgfaZe8V1vk35Dc6ba4P6Ed'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/patients/{patient_id}'
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'GET - get the requested patient user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient_id:
        name: patient_id
        description: 'The ID of the patient.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      patient_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"first_name":null,"last_name":null,"email":"madison68@example.com","patient_detail":null,"role":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dV3a6Dhg6cZ5Eb8kvf1aeP4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/patients/{patient_id}'
    metadata:
      groupName: 'Patient Handling'
      groupDescription: |-

        APIs for Patient data.
      subgroup: ''
      subgroupDescription: ''
      title: 'UPDATE - modify patient users data.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient_id:
        name: patient_id
        description: 'The ID of the patient.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      patient_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'First name of the system user. Must not be greater than 60 characters.'
        required: false
        example: Jakab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Last name of the system user. Must not be greater than 60 characters.'
        required: false
        example: Gipsz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Email address of the system user. Must be a valid email address.'
        required: false
        example: jakab.gipsz@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Password of the system user. Must not be greater than 150 characters.'
        required: false
        example: jakabgipspasswd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: 'Role of the current user.'
        required: false
        example: patient
        type: string
        enumValues:
          - patient
          - doctor
          - admin
        exampleWasSpecified: false
        custom: []
      birthday:
        name: birthday
        description: 'Birthday of the patient. Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '1985-09-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birthplace:
        name: birthplace
        description: 'Birthplace of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: false
        example: Budapest
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Current living city of the patient. Must match the regex /^[a-zA-Z]+/. Must not be greater than 80 characters.'
        required: false
        example: Eger
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zip:
        name: zip
        description: 'Zip of the patient current living place. Must not be greater than 10 characters.'
        required: false
        example: '3600'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      street:
        name: street
        description: 'Street of the living place of the patient. Must not be greater than 50 characters.'
        required: false
        example: 'Leányka utca'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house_number:
        name: house_number
        description: 'Current house number of the patient. Must not be greater than 10 characters.'
        required: false
        example: '6.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      insurance_number:
        name: insurance_number
        description: 'Insurance (TAJ) number of the patient. Must not be greater than 15 characters.'
        required: false
        example: '123 123 123'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Phone number of the patient. Must not be greater than 30 characters.'
        required: false
        example: '+36 36 460 1231'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: Jakab
      last_name: Gipsz
      email: jakab.gipsz@gmail.com
      password: jakabgipspasswd
      role: patient
      birthday: '1985-09-15'
      birthplace: Budapest
      city: Eger
      zip: '3600'
      street: 'Leányka utca'
      house_number: '6.'
      insurance_number: '123 123 123'
      phone: '+36 36 460 1231'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"first_name":null,"last_name":null,"email":"foconner@example.org","patient_detail":null,"role":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4EkhfcvgeDd856Vaba136ZP'
    controller: null
    method: null
    route: null
    custom: []
